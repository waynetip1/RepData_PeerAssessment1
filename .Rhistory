library(dplyr)
library(ggplot2)
library(tidyr)
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(fileURL,destfile = "./week4Data.zip")
unzip(zipfile ="./week4Data.zip")
pathdata <- "./"
list.files("./")
setwd(pathdata)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
p6<-ggplot(mdLaVehicle, aes(x=year, y=Emissions, colour = City, group=year)) +
geom_point()+
geom_line(aes(x=year,y=Emissions,group=City))+
labs(title="Vehicle Emission Comparison of Baltimore and Los Angeles\n", x="Year",
y="Emissions (Tons)", color="City\n")+
guides(guide_legend(title = "City"))
png('plot6.png')
p6
dev.off()
vehicleFilter <- filter(SCC,grepl('Mobile - On-Road',EI.Sector))
vehicleFilterData <- merge(vehicleFilter, NEI,
by='SCC',all.x = T)
vehicleFilterDataTotal <- vehicleFilterData %>%
filter(fips=="24510")%>%
group_by(year) %>%
summarise(Emissions = sum(Emissions))
p5<-ggplot(vehicleFilterDataTotal, aes(x=year, y=Emissions)) +
geom_point(color='red')+
geom_line(color='green',aes(x=year,y=Emissions))+
labs(title="Maryland Onroad Vehicle Emissions\n", x="Year",
y="Emissions (Tons)")
png('plot5.png')
p5
dev.off()
# plot 4
#filter out coal SCC
coalFilter <- filter(SCC,grepl('Coal',EI.Sector))
coalFilterData <- merge(coalFilter, NEI,
by='SCC',all.x = T)
coalFilterDataTotal <- coalFilterData %>%
group_by(year) %>%
summarise(Emissions = sum(Emissions)/1000)
p4<-ggplot(coalFilterDataTotal, aes(x=year, y=Emissions)) +
geom_point(color='red')+
geom_line(color='blue',aes(x=year,y=Emissions))+
labs(title="United States Coal Combustion Emissions\n", x="Year",
y="Emissions (Thousand Tons)")
png('plot4.png')
p4
dev.off()
totalMDType <-NEI %>%
filter(fips=="24510") %>%
group_by(year,type) %>%
summarise(Emissions = sum(Emissions))
p1<-ggplot(totalMDType, aes(x=year, y=Emissions, colour = type, group=year)) +
geom_point()+
geom_line(aes(x=year,y=Emissions,group=type))+
labs(title="Sources of Baltimore Emissions\n", x="Year",
y="Emissions (Tons)", color="Emission Type\n")+
guides(guide_legend(title = "Emission Type"))
png('plot3.png')
p1
dev.off()
## Plot 2
totalMD <-NEI %>%
filter(fips=="24510") %>%
group_by(year) %>%
summarise(Emissions = sum(Emissions))
png('plot2.png')
barplot(totalMD$Emissions,names.arg = totalYear$year,
col = "orange", ylab = "PM2.5 Emitted in (Tons)", ylim = c(0,5000),
xlab = "Year", main = "Maryland Total PM2 Emissions From All Sources")
dev.off()
totalYear <- NEI %>%
group_by(year) %>%
summarise(Emissions = sum(Emissions)/1000000)
png('plot1.png')
barplot(totalYear$Emissions,names.arg = totalYear$year, ylim = c(0,10),
col = "blue", ylab = "PM2.5 Emitted in (Million Tons)",
xlab = "Year", main = "Total PM2 Emissions From All Sources")
dev.off()
p6<-ggplot(mdLaVehicle, aes(x=year, y=Emissions, colour = City, group=year)) +
geom_point(size=4)+
geom_line(aes(x=year,y=Emissions,group=City))+
labs(title="Vehicle Emission Comparison of Baltimore and Los Angeles\n", x="Year",
y="Emissions (Tons)", color="City\n")+
guides(guide_legend(title = "City"))
p6
p6<-ggplot(mdLaVehicle, aes(x=year, y=Emissions, colour = City, group=year)) +
geom_point(size=5)+
geom_line(aes(x=year,y=Emissions,group=City))+
labs(title="Vehicle Emission Comparison of Baltimore and Los Angeles\n", x="Year",
y="Emissions (Tons)", color="City\n")+
guides(guide_legend(title = "City"))
p6
p6<-ggplot(mdLaVehicle, aes(x=year, y=Emissions, colour = City, group=year)) +
geom_point(size=2.5)+
geom_line(aes(x=year,y=Emissions,group=City))+
labs(title="Vehicle Emission Comparison of Baltimore and Los Angeles\n", x="Year",
y="Emissions (Tons)", color="City\n")+
guides(guide_legend(title = "City"))
p6
p6<-ggplot(mdLaVehicle, aes(x=year, y=Emissions, colour = City, group=year)) +
geom_point(size=3)+
geom_line(aes(x=year,y=Emissions,group=City))+
labs(title="Vehicle Emission Comparison of Baltimore and Los Angeles\n", x="Year",
y="Emissions (Tons)", color="City\n")+
guides(guide_legend(title = "City"))
p6
6<-ggplot(mdLaVehicle, aes(x=year, y=Emissions, colour = City, group=year)) +
geom_point(size=3)+
geom_line(aes(x=year,y=Emissions,group=City, size=3)+
labs(title="Vehicle Emission Comparison of Baltimore and Los Angeles\n", x="Year",
y="Emissions (Tons)", color="City\n")+
guides(guide_legend(title = "City"))
p6
p6
p6<-ggplot(mdLaVehicle, aes(x=year, y=Emissions, colour = City, group=year)) +
geom_point(size=3)+
geom_line(aes(x=year,y=Emissions,group=City), size=3)+
labs(title="Vehicle Emission Comparison of Baltimore and Los Angeles\n", x="Year",
y="Emissions (Tons)", color="City\n")+
guides(guide_legend(title = "City"))
p6
p6<-ggplot(mdLaVehicle, aes(x=year, y=Emissions, colour = City, group=year)) +
geom_point(size=3)+
geom_line(aes(x=year,y=Emissions,group=City), size=1.5)+
labs(title="Vehicle Emission Comparison of Baltimore and Los Angeles\n", x="Year",
y="Emissions (Tons)", color="City\n")+
guides(guide_legend(title = "City"))
p6
p6<-ggplot(mdLaVehicle, aes(x=year, y=Emissions, colour = City, group=year)) +
geom_point(size=3,aes(color='black'))+
geom_line(aes(x=year,y=Emissions,group=City), size=1.5)+
labs(title="Vehicle Emission Comparison of Baltimore and Los Angeles\n", x="Year",
y="Emissions (Tons)", color="City\n")+
guides(guide_legend(title = "City"))
p6
p6<-ggplot(mdLaVehicle, aes(x=year, y=Emissions, colour = City, group=year)) +
geom_point(size=3,color='black')+
geom_line(aes(x=year,y=Emissions,group=City), size=1.5)+
labs(title="Vehicle Emission Comparison of Baltimore and Los Angeles\n", x="Year",
y="Emissions (Tons)", color="City\n")+
guides(guide_legend(title = "City"))
p6
p6<-ggplot(mdLaVehicle, aes(x=year, y=Emissions, colour = City, group=year)) +
geom_line(aes(x=year,y=Emissions,group=City), size=1.5)+
labs(title="Vehicle Emission Comparison of Baltimore and Los Angeles\n", x="Year",
y="Emissions (Tons)", color="City\n")+
geom_point(size=3,color='black')+
guides(guide_legend(title = "City"))
p6
p6<-ggplot(mdLaVehicle, aes(x=year, y=Emissions, colour = City, group=year)) +
geom_line(aes(x=year,y=Emissions,group=City), size=1.5)+
labs(title="Vehicle Emission Comparison Between Baltimore and Los Angeles\n", x="Year",
y="Emissions (Tons)", color="City\n")+
geom_point(size=3,color='black')+
guides(guide_legend(title = "City"))
png('plot6.png')
p6
dev.off()
p5<-ggplot(vehicleFilterDataTotal, aes(x=year, y=Emissions)) +
geom_line(color='green',size=1.5,aes(x=year,y=Emissions))+
geom_point(color='red',size=3)+
labs(title="Maryland Onroad Vehicle Emissions\n", x="Year",
y="Emissions (Tons)")
p5
p5<-ggplot(vehicleFilterDataTotal, aes(x=year, y=Emissions)) +
geom_line(color='green',size=1.5,aes(x=year,y=Emissions))+
geom_point(color='red',size=3)+
labs(title="Maryland On-road Vehicle Emissions\n", x="Year",
y="Emissions (Tons)")
png('plot5.png')
p5
dev.off()
p4<-ggplot(coalFilterDataTotal, aes(x=year, y=Emissions)) +
geom_line(color='blue',size=1.5,aes(x=year,y=Emissions))+
geom_point(color='red',size=3)+
labs(title="United States Coal Combustion Emissions\n", x="Year",
y="Emissions (Thousand Tons)")
p4
p1<-ggplot(totalMDType, aes(x=year, y=Emissions, colour = type, group=year)) +
geom_line(size=1.5,aes(x=year,y=Emissions,group=type))+
labs(title="Sources of Baltimore Emissions\n", x="Year",
y="Emissions (Tons)", color="Emission Type\n")+
geom_point(size=3)+
guides(guide_legend(title = "Emission Type"))
p1
totalMDType <-NEI %>%
filter(fips=="24510") %>%
group_by(year,type) %>%
summarise(Emissions = sum(Emissions))
p3<-ggplot(totalMDType, aes(x=year, y=Emissions, colour = type, group=year)) +
geom_line(size=1.5,aes(x=year,y=Emissions,group=type))+
labs(title="Sources of Baltimore Emissions\n", x="Year",
y="Emissions (Tons)", color="Emission Type\n")+
geom_point(size=3)+
guides(guide_legend(title = "Emission Type"))
png('plot3.png')
p3
dev.off()
p4<-ggplot(coalFilterDataTotal, aes(x=year, y=Emissions)) +
geom_line(color='blue',size=1.5,aes(x=year,y=Emissions))+
geom_point(color='red',size=3)+
labs(title="United States Coal Combustion Emissions\n", x="Year",
y="Emissions (Thousand Tons)")
png('plot4.png')
p4
dev.off()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
din(pm0)
dim(pm0)
head(pm0)
cnames
cnames<-strsplit(cnames,'|',TRUE)
cnames
names(pm0)<- make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
is.na(mean(x0))
is.na(x0)
mean(is.na(x0))
name(pm1)<-make.names(cnames[[1]][wcol])
names(pm1)<-make.names(cnames[[1]][wcol])
dim(dm1)
dim(pm1)
x1<-sample.value(pm1)
x1<-Sample.Value(pm1)
x1<-Sample(pm1)
x1<-(pm1$Sample.Value)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative<-x1,0
negative<-x1<0
sum(negative,na.rm = TRUE)
mean(negative,na.rms=TRUE)
mean(negative,na.rm=TRUE)
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],'month')
str(site0)
both<-intersect(site0,site1)
both
head(pm0)
cnt0<-subset(pm0,pm0$State.Code==36 & %in% pm0$county.site)
cnt0<-subset(pm0,pm0$State.Code==36 && %in% pm0$county.site)
cnt0<-subset(pm0,pm0$State.Code==36  %in% pm0$county.site)
cnt0<-subset(pm0,pm0$State.Code==36 & pm0$county.site %in% both)
cnt0<-subset(pm0,State.Code==36 & county.site %in% both)
cnt1<-subset(pm1,State.Code==36 & county.site %in% both)
sapply
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub<-subset(cnt0,County.code==63)
pm0sub<-subset(cnt0,cnt0$County.code==63)
pm0sub<-subset(cnt0,County.Code==63)
pm0sub<-subset(cnt0,County.Code==63 & Site.ID==2008)
pm1sub<-subset(cnt1,County.Code==63 & Site.ID==2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2))
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0,x0sub, pch=20)
abline(h,lwd=2,median(x0sub))
abline(h=median(x0sub),lwd=2
)
abline(h=median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1,x1sub, pch=20)
plot(dates1,x1sub, pch=20)
abline(h=median(x0sub, na.rm = TRUE),lwd=2)
abline(h=median(x1sub, na.rm = TRUE),lwd=2)
rng<-range(x0sub,x1sub,na.rm=TRUE)
rng
mn0<-with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1<-with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state=names(mn0),mean(mn0))
d0<-data.frame(state=names(mn0),mean=mn0)
d1<-data.frame(state=names(mn1),mean=mn1)
mrg<-merge(d0,d1,by='state')
dim(mrg)
head(mrg)
with(mrg,plot(rep1,52),mrg[,2],xlim=c(.5,2.5))
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5))
)
with(mrg,plot(rep(2,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,plot(rep(2,52),mrg[,3],xlim=c(.5,2.5)))
with(mrg,plot(rep(2,52),mrg[,3])
)
with(mrg,plot(rep(2,52),mrg[,3]))
with(mrg,points(rep(2,52),mrg[,3]))
skip()
mrg[mrg$mean.x<mrg$mean.y,]
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps),
medianSteps=median.default(steps))
library(tidyr)
library(dplyr)
library(ggplot2)
library(data.table)
setwd("C:/Users/Wayne Office Laptop/Documents/GitHub/personal-Activity-Monitoring---Peer-Graded-Assignment-")
fileURL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileURL,destfile = "./activity.zip")
unzip(zipfile ="./activity.zip")
pathdata <- "./"
list.files("./")
# read data
activityData <- fread("activity.csv",na.strings = c("NA"))
# calculate number of NAs
sum(is.na(activityData)==TRUE)
mean(is.na(activityData))
#transform the data
#remove NA steps
activityDataFilter <- activityData %>%
drop_na(steps)
#make date character to date
activityDataFilter$date <- as.Date(activityDataFilter$date, "%Y-%m-%d")
activityDataFilter <- activityDataFilter %>%
group_by(date)
# What is the mean total number of steps take per day
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps),
medianSteps=median.default(steps))
#plot histogram of daily steps per day
hist(activityDataStepsDay$dailySteps)
# calculate mean and median of the total number of steps per daymean(activityDataStepsDay$dailySteps),median(activityDataStepsDay$dailySteps))
View(activityDataStepsDay)
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps),
medianSteps=quantile(steps,prob=.5))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps),
medianSteps=median(steps, na.rm=TRUE))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps),
medianSteps=median(activityDataFilter$steps))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps),
medianSteps=median(.steps))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps),
medianSteps=median(~steps))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps),
medianSteps=median(.~steps))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps),
medianSteps=median(.~steps, na.rm=TRUE))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps),
medianSteps=median(steps, na.rm=TRUE))
View(activityDataStepsDay)
library("dplyr", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
install.packages("dplyr")
install.packages("dplyr")
library(tidyr)
library(dplyr)
library(ggplot2)
library(data.table)
setwd("C:/Users/Wayne Office Laptop/Documents/GitHub/personal-Activity-Monitoring---Peer-Graded-Assignment-")
fileURL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileURL,destfile = "./activity.zip")
unzip(zipfile ="./activity.zip")
pathdata <- "./"
list.files("./")
# read data
activityData <- fread("activity.csv",na.strings = c("NA"))
# calculate number of NAs
sum(is.na(activityData)==TRUE)
mean(is.na(activityData))
#transform the data
#remove NA steps
activityDataFilter <- activityData %>%
drop_na(steps)
#make date character to date
activityDataFilter$date <- as.Date(activityDataFilter$date, "%Y-%m-%d")
activityDataFilter <- activityDataFilter %>%
group_by(date)
# What is the mean total number of steps take per day
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps),
medianSteps=median(steps, na.rm=TRUE))
#plot histogram of daily steps per day
hist(activityDataStepsDay$dailySteps)
# calculate mean and median of the total number of steps per daymean(activityDataStepsDay$dailySteps),median(activityDataStepsDay$dailySteps))
View(activityDataStepsDay)
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps),
medianSteps=median(steps, na.rm=FALSE))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps),
medianSteps=median(activityDataFilter$steps))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = median(steps),
meanSteps=mean(steps))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(dailySteps = sum(steps),
meanSteps=mean(steps))
median(activityDataStepsDay)
str(activityDataFilter)
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(totalSteps = sum(steps),
meanSteps=mean(steps))
str(activityDataStepsDay)
version"dplyr"
activityDataFilter <- activityDataFilter %>%
group_by(date)%>%
summarise(Median=median(steps))
activityDataFilter <- activityData %>%
drop_na(steps)
activityDataFilter$date <- as.Date(activityDataFilter$date, "%Y-%m-%d")
activityDataFilter <- activityDataFilter %>%
group_by(date)
View(activityDataFilter)
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(totalSteps = sum(steps),
meanSteps=mean(steps))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(totalSteps = sum(steps),
meanSteps=mean(steps),
medianSteps=median(steps))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(totalSteps = sum(steps),
meanSteps=mean(steps),
medianSteps=median(steps))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(totalSteps = sum(steps),
meanSteps=mean(steps))
library(doBy)
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise_each(funs(sum,mean,median),steps)
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise_at(funs(sum,mean,median),steps)
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise_each(totalSteps = sum(steps),
meanSteps=mean(steps),
medianSteps=as.numeric(median(steps)))
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(totalSteps = sum(steps),
meanSteps=mean(steps),
medianSteps=as.numeric(median(steps)))
activityDataFilter$date <- as.Date(activityDataFilter$date, "%Y-%m-%d")
activityDataFilter$steps<-as.integer(activityData)
activityDataFilter <- activityDataFilter %>%
group_by(date)
# What is the mean total number of steps take per day
activityDataStepsDay <- activityDataFilter %>%
group_by(date)%>%
summarise(totalSteps = sum(steps),
meanSteps=mean(steps),
medianSteps=as.numeric(median(steps)))
